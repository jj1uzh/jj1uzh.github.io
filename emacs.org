#+TITLE: Emacsメモ
#+SETUPFILE: ./common.org

** org-mode
*** drag-and-dropでブラウザから画像をダウンロードしてリンクを入れる
request.elを使う．
#+BEGIN_SRC emacs-lisp
(defun my/org-insert-uri-image (uri action)
  (if (not (eq major-mode 'org-mode))
      (dnd-open-file uri action) ; if not in org-mode, use default function.
    (require 'request)
    (request uri
      :encoding 'binary
      :complete (cl-function
                 (lambda (&key data response &allow-other-keys)
                   (let* ((ext (pcase (request-response-header response "content-type")
                                 ("image/jpeg" ".jpeg")
                                 ("image/png" ".png")
                                 (typ "")))
                          (fname (format "./%s%s"
                                         (format-time-string "%Y-%m-%d_%H-%M-%S"
                                                             (current-time))
                                         ext)))
                     (with-temp-buffer
                       (insert data)
                       (write-region nil nil fname))
                     (insert (format "[[%s]]" fname))))))))

(push '("^\\(https?\\)://" . my/org-insert-uri-image) dnd-protocol-alist)
#+END_SRC

** eshell
現状 vterm を使っていて特に不満は無いが， eshell も使ってみたら新たな世界が広がるかもしれない(？)のでセットアップしてみる．

まずプロンプトで現状のzshのプロンプトを再現する：
#+BEGIN_SRC emacs-lisp
(setq eshell-prompt-function
      (lambda () (concat "\n"
                         (number-to-string eshell-last-command-status)
                         " [" (user-login-name) "@" (system-name) " " (eshell/pwd) "]\n> ")))
(setq eshell-prompt-regexp "^[^>]*> ")
#+END_SRC
ただ困ったことに， ~eshell-last-command-status~ はEmacs内部で実装されているコマンド(ls,cdなど)に対しては変化しない．TODO．

** lsp
*** go-modeだけLSPでformat-on-saveする
=add-hook= の第4引数がnon-nilならばバッファローカルになる
#+BEGIN_SRC emacs-lisp
(with-eval-after-load 'go-mode
  (add-hook 'go-mode-hook
            (lambda () (add-hook 'before-save-hook
                                 (lambda () (ignore-errors (lsp-format-buffer)))
                                 nil
                                 'local))))
#+END_SRC
